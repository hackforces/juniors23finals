<!DOCTYPE html>
<html>
<head>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap');
        body {
            font-family: 'Montserrat', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #eeeeee;
            display: flex;
            justify-content: center;
        }
        .container {
            width: 60%;
        }
        .header {
            display: flex;
            justify-content: space-between;
            padding: 20px;
            background: linear-gradient(45deg, #3494E6, #EC6EAD);
            color: white;
            height: 30px;
            border-bottom-left-radius: 20px;
            border-bottom-right-radius: 20px;
        }
        .header h1, .header h2 {
            margin: 0;
            font-size: 22px;
        }
        .main {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }
        .posts, .new-profiles {
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.1);
        }
        .posts {
            width: 65%;
            margin-right: 7px;
            margin-bottom: 35px;
        }
        .post {
            margin-bottom: 20px;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            max-height: 700px;
        }
        .post:hover {
            transform: scale(1.01);
        }
        .post-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 10px;
        }
        .post-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            max-height: 500px;
        }
        .new-profiles {
            width: 30%;
            height: 500px;
        }
        .profile-name {
            width: 100%;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis; 
            transition: all 0.3s ease;
            text-align: center;
        }
        .profile-name:hover {
            color: #3494E6;
        }
        .profile {
            align-items: center;
            display: flex;
            flex-direction: column;
        }
        .profile p {
            margin: 0 0 7px;
        }
        .username {
            word-wrap: break-word;
            margin-top: 0px;
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis; 
        }
        .footer {
            text-align: center;
            margin-top: 40px;
            color: #888;
            font-size: 14px;
        }
        .btn-text {
            background: none;
            border: none;
            color: inherit;
            text-align: left;
            font: inherit;
            cursor: pointer;
            margin: 0px;
            padding: 0px;
        }
        .btn-text:hover {
            color: #3494E6;
        }
        .btn-text profileBtn{
            width: 150px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis; 
        }
        .whitehover:hover {
            color: white;
        }
        .header-right-side {
            display: flex;
            flex-direction: row;
            flex-wrap: nowrap;
        }
        .new-post {
            padding-right: 20px;
        }
        .search-query {
            text-align: center;
            margin-top: 0;
        }
        .header-search {
            display: flex;
            align-items: center;
        }
        .header-search input {
            padding: 5px;
            width: 200px;
            border-radius: 7px;
            border: none;
            border-radius: 10px;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script>
        // Fetching posts from the server
        fetch('/api/feed', {"method":"get"})
            .then(response => response.json())
            .then(posts => {
                const postsContainer = document.querySelector('.posts');
                const noPosts = document.createElement('h2');
                if (posts.length == 0) {
                    noPosts.style.textAlign = 'center';
                    noPosts.innerHTML = "Nothing here yet...";
                    postsContainer.appendChild(noPosts);
                }
                posts.forEach(post => {
                    // Creating the post element
                    const postElement = document.createElement('div');
                    postElement.classList.add('post');


                // Adding the post owner username
                const usernameButton = document.createElement('button');
                usernameButton.classList.add('btn-text');
                usernameButton.onclick = () => goToUser(post.owner_username);
                const username = document.createElement('h3');
                username.classList.add('username');
                username.innerHTML = `${post.owner_username} <i class="fas fa-camera"></i>`;
                usernameButton.appendChild(username);
                postElement.appendChild(usernameButton);

                // Adding the post image
                const image = document.createElement('img');
                image.classList.add('post-image');
                image.src = `/uploads?file=${post.image}`;
                postElement.appendChild(image);

                // Adding the post description
                const description = document.createElement('p');
                description.textContent = post.description;
                postElement.appendChild(description);

                // Creating the post controls
                const postControls = document.createElement('div');
                postControls.classList.add('post-controls');

                // Adding the like button
                const likeButton = document.createElement('button');
                likeButton.classList.add('btn-text');
                likeButton.onclick = () => likePost(post.owner_username, post.post_id);

                // Check if the user has liked the post
                const userId = {{ userId }};
                if (post.likes && post.likes.includes(userId)) {
                    likeButton.innerHTML = `<i class="fas fa-heart" id="likeIcon-${post.post_id}" style="color:#ff0000;"></i> Like`;
                } else {
                    likeButton.innerHTML = `<i class="fas fa-heart" id="likeIcon-${post.post_id}"></i> Like`;
                }
                postControls.appendChild(likeButton);

                // Adding the comments button
                const commentButton = document.createElement('button');
                commentButton.classList.add('btn-text');
                commentButton.onclick = () => goToPost(post.owner_username, post.post_id);
                commentButton.innerHTML = `<i class="fas fa-comment"></i> Comments`;
                postControls.appendChild(commentButton);

                // Adding the post privacy status
                const privacyStatus = document.createElement('span');
                if (post.private) {
                    privacyStatus.innerHTML = '<i class="fas fa-lock"></i> Private';
                } else {
                    privacyStatus.innerHTML = '<i class="fas fa-unlock"></i> Public';
                }
                postControls.appendChild(privacyStatus);

                // Adding the post controls to the post element
                postElement.appendChild(postControls);

                // Adding the post element to the posts container
                postsContainer.appendChild(postElement);
            });
        });

        // Fetching new profiles from the server
        fetch('/api/getNewProfiles', {"method":"get"})
        .then(response => response.json())
        .then(profiles => {
            // Selecting the new profiles container
            const profilesContainer = document.querySelector('.new-profiles');

            // Creating the profile container
            const profileContainer = document.createElement('div');
            profileContainer.classList.add('profile');

            // Looping through each profile
            profiles.forEach(profile => {
            // Creating the profile button
            const profileButton = document.createElement('button');
            profileButton.classList.add('btn-text');
            profileButton.style.width = '100%';
            profileButton.onclick = () => goToUser(profile.username);

            // Adding the profile username
            const username = document.createElement('p');
            username.classList.add('profile-name');
            username.textContent = profile.username;
            profileButton.appendChild(username);

            // Adding the profile button to the profile container
            profileContainer.appendChild(profileButton);
            });

            // Adding the profile container to the new profiles container
            profilesContainer.appendChild(profileContainer);
        });


        function likePost(username, post_id) {
            fetch('/api/like', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username: `${username}`, post_id: `${post_id}`})
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error while liking');
                }
                else {
                    const likeIcon = document.querySelector(`#likeIcon-${post_id}`); // select the right like button
                    if (likeIcon.style.color == "") {
                        likeIcon.style.color = '#ff0000';
                    }
                    else {
                        likeIcon.style.color = null;
                    }
                }
                return response.json();
            })
            .then(data => console.log(data));
        }


        function goToPost(username, post_id) {
            window.location.href = `/user/${username}/${post_id}`;
        }

        function goToUser(username) {
            window.location.href = '/user/' + username;
        }
        function goToUrl(url) {
            window.location.href = location.origin + url;
        }
        function handleSearch(event) {
            event.preventDefault();
            const query = event.target.elements.query.value;
            window.location.href = '/search?query=' + encodeURIComponent(query);
        }
    </script>
</head>
<body>
    <div class="container">
        <div class="header">
            <button class="btn-text whitehover" onclick="goToUrl('/')"><h1>Innogram</h1></button>
            <div class="header-search">
                <form onsubmit="handleSearch(event)">
                    <input type="text" name="query" placeholder="Search..." />
                </form>
            </div>
            <div class="header-right-side">
                <button class="btn-text whitehover" onclick="goToUrl('/create')">
                    <h1 class="new-post"><i class="fas fa-plus"></i> New post</h1>
                </button>
                <button class="btn-text profileBtn whitehover" onclick="goToUser('{{ username }}')">
                    <h1 class="username"><i class="fas fa-user"></i> {{ username }}</h1>
                </button>
            </div>
        </div>
        <div class="main">
            <div class="posts">
            </div>
            <div class="new-profiles">
                <h3 class="new-profiles-header" style="text-align: center;"><i class="fas fa-users"></i> New Profiles</h3>
            </div>
        </div>
    </div>
</body>
</html>
    